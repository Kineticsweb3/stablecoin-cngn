{
  "contractName": "ERC20BurnableUpgradeable",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burnFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC20Upgradeable.sol\";\nimport \"../../../utils/ContextUpgradeable.sol\";\nimport \"../../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20BurnableUpgradeable is Initializable, ContextUpgradeable, ERC20Upgradeable {\n    function __ERC20Burnable_init() internal onlyInitializing {\n    }\n\n    function __ERC20Burnable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Destroys `amount` tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 amount) public virtual {\n        _burn(_msgSender(), amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\n     * allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `amount`.\n     */\n    function burnFrom(address account, uint256 amount) public virtual {\n        _spendAllowance(account, _msgSender(), amount);\n        _burn(account, amount);\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[50] private __gap;\n}\n",
  "sourcePath": "contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
  "ast": {
    "absolutePath": "contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        11499
      ],
      "ContextUpgradeable": [
        11697
      ],
      "ERC20BurnableUpgradeable": [
        10842
      ],
      "ERC20Upgradeable": [
        10700
      ],
      "IERC20MetadataUpgradeable": [
        11215
      ],
      "IERC20Upgradeable": [
        10778
      ],
      "Initializable": [
        9825
      ]
    },
    "id": 10843,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10780,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "124:23:61"
      },
      {
        "absolutePath": "contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
        "file": "../ERC20Upgradeable.sol",
        "id": 10781,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10843,
        "sourceUnit": 10701,
        "src": "149:33:61",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
        "file": "../../../utils/ContextUpgradeable.sol",
        "id": 10782,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10843,
        "sourceUnit": 11698,
        "src": "183:47:61",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/.deps/npm/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "file": "../../../proxy/utils/Initializable.sol",
        "id": 10783,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10843,
        "sourceUnit": 9826,
        "src": "231:48:61",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 10785,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9825,
              "src": "536:13:61"
            },
            "id": 10786,
            "nodeType": "InheritanceSpecifier",
            "src": "536:13:61"
          },
          {
            "baseName": {
              "id": 10787,
              "name": "ContextUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11697,
              "src": "551:18:61"
            },
            "id": 10788,
            "nodeType": "InheritanceSpecifier",
            "src": "551:18:61"
          },
          {
            "baseName": {
              "id": 10789,
              "name": "ERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10700,
              "src": "571:16:61"
            },
            "id": 10790,
            "nodeType": "InheritanceSpecifier",
            "src": "571:16:61"
          }
        ],
        "canonicalName": "ERC20BurnableUpgradeable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 10784,
          "nodeType": "StructuredDocumentation",
          "src": "281:208:61",
          "text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
        },
        "fullyImplemented": true,
        "id": 10842,
        "linearizedBaseContracts": [
          10842,
          10700,
          11215,
          10778,
          11697,
          9825
        ],
        "name": "ERC20BurnableUpgradeable",
        "nameLocation": "508:24:61",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 10795,
              "nodeType": "Block",
              "src": "652:7:61",
              "statements": []
            },
            "id": 10796,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10793,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10792,
                  "name": "onlyInitializing",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9770,
                  "src": "635:16:61"
                },
                "nodeType": "ModifierInvocation",
                "src": "635:16:61"
              }
            ],
            "name": "__ERC20Burnable_init",
            "nameLocation": "603:20:61",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10791,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "623:2:61"
            },
            "returnParameters": {
              "id": 10794,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "652:0:61"
            },
            "scope": 10842,
            "src": "594:65:61",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10801,
              "nodeType": "Block",
              "src": "733:7:61",
              "statements": []
            },
            "id": 10802,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10799,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10798,
                  "name": "onlyInitializing",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9770,
                  "src": "716:16:61"
                },
                "nodeType": "ModifierInvocation",
                "src": "716:16:61"
              }
            ],
            "name": "__ERC20Burnable_init_unchained",
            "nameLocation": "674:30:61",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10797,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "704:2:61"
            },
            "returnParameters": {
              "id": 10800,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "733:0:61"
            },
            "scope": 10842,
            "src": "665:75:61",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10814,
              "nodeType": "Block",
              "src": "893:44:61",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 10809,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11682,
                          "src": "909:10:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 10810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "909:12:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10811,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10805,
                        "src": "923:6:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10808,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10584,
                      "src": "903:5:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "903:27:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10813,
                  "nodeType": "ExpressionStatement",
                  "src": "903:27:61"
                }
              ]
            },
            "documentation": {
              "id": 10803,
              "nodeType": "StructuredDocumentation",
              "src": "745:98:61",
              "text": " @dev Destroys `amount` tokens from the caller.\n See {ERC20-_burn}."
            },
            "functionSelector": "42966c68",
            "id": 10815,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "857:4:61",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10806,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10805,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "870:6:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 10815,
                  "src": "862:14:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10804,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "862:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "861:16:61"
            },
            "returnParameters": {
              "id": 10807,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "893:0:61"
            },
            "scope": 10842,
            "src": "848:89:61",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10835,
              "nodeType": "Block",
              "src": "1309:95:61",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10824,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10818,
                        "src": "1335:7:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 10825,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11682,
                          "src": "1344:10:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 10826,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1344:12:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10827,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10820,
                        "src": "1358:6:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10823,
                      "name": "_spendAllowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10672,
                      "src": "1319:15:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 10828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1319:46:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10829,
                  "nodeType": "ExpressionStatement",
                  "src": "1319:46:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10831,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10818,
                        "src": "1381:7:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10832,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10820,
                        "src": "1390:6:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10830,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10584,
                      "src": "1375:5:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1375:22:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10834,
                  "nodeType": "ExpressionStatement",
                  "src": "1375:22:61"
                }
              ]
            },
            "documentation": {
              "id": 10816,
              "nodeType": "StructuredDocumentation",
              "src": "943:295:61",
              "text": " @dev Destroys `amount` tokens from `account`, deducting from the caller's\n allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `amount`."
            },
            "functionSelector": "79cc6790",
            "id": 10836,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnFrom",
            "nameLocation": "1252:8:61",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10821,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10818,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1269:7:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 10836,
                  "src": "1261:15:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10817,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1261:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10820,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1286:6:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 10836,
                  "src": "1278:14:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10819,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1278:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1260:33:61"
            },
            "returnParameters": {
              "id": 10822,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1309:0:61"
            },
            "scope": 10842,
            "src": "1243:161:61",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 10837,
              "nodeType": "StructuredDocumentation",
              "src": "1410:254:61",
              "text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
            },
            "id": 10841,
            "mutability": "mutable",
            "name": "__gap",
            "nameLocation": "1689:5:61",
            "nodeType": "VariableDeclaration",
            "scope": 10842,
            "src": "1669:25:61",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 10838,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1669:7:61",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 10840,
              "length": {
                "hexValue": "3530",
                "id": 10839,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1677:2:61",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_50_by_1",
                  "typeString": "int_const 50"
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "1669:11:61",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "visibility": "private"
          }
        ],
        "scope": 10843,
        "src": "490:1207:61",
        "usedErrors": []
      }
    ],
    "src": "124:1574:61"
  },
  "legacyAST": {
    "absolutePath": "contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC20BurnableUpgradeable.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        11499
      ],
      "ContextUpgradeable": [
        11697
      ],
      "ERC20BurnableUpgradeable": [
        10842
      ],
      "ERC20Upgradeable": [
        10700
      ],
      "IERC20MetadataUpgradeable": [
        11215
      ],
      "IERC20Upgradeable": [
        10778
      ],
      "Initializable": [
        9825
      ]
    },
    "id": 10843,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10780,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "124:23:61"
      },
      {
        "absolutePath": "contracts/.deps/npm/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
        "file": "../ERC20Upgradeable.sol",
        "id": 10781,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10843,
        "sourceUnit": 10701,
        "src": "149:33:61",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
        "file": "../../../utils/ContextUpgradeable.sol",
        "id": 10782,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10843,
        "sourceUnit": 11698,
        "src": "183:47:61",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/.deps/npm/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "file": "../../../proxy/utils/Initializable.sol",
        "id": 10783,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10843,
        "sourceUnit": 9826,
        "src": "231:48:61",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 10785,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9825,
              "src": "536:13:61"
            },
            "id": 10786,
            "nodeType": "InheritanceSpecifier",
            "src": "536:13:61"
          },
          {
            "baseName": {
              "id": 10787,
              "name": "ContextUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11697,
              "src": "551:18:61"
            },
            "id": 10788,
            "nodeType": "InheritanceSpecifier",
            "src": "551:18:61"
          },
          {
            "baseName": {
              "id": 10789,
              "name": "ERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 10700,
              "src": "571:16:61"
            },
            "id": 10790,
            "nodeType": "InheritanceSpecifier",
            "src": "571:16:61"
          }
        ],
        "canonicalName": "ERC20BurnableUpgradeable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 10784,
          "nodeType": "StructuredDocumentation",
          "src": "281:208:61",
          "text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
        },
        "fullyImplemented": true,
        "id": 10842,
        "linearizedBaseContracts": [
          10842,
          10700,
          11215,
          10778,
          11697,
          9825
        ],
        "name": "ERC20BurnableUpgradeable",
        "nameLocation": "508:24:61",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 10795,
              "nodeType": "Block",
              "src": "652:7:61",
              "statements": []
            },
            "id": 10796,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10793,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10792,
                  "name": "onlyInitializing",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9770,
                  "src": "635:16:61"
                },
                "nodeType": "ModifierInvocation",
                "src": "635:16:61"
              }
            ],
            "name": "__ERC20Burnable_init",
            "nameLocation": "603:20:61",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10791,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "623:2:61"
            },
            "returnParameters": {
              "id": 10794,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "652:0:61"
            },
            "scope": 10842,
            "src": "594:65:61",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10801,
              "nodeType": "Block",
              "src": "733:7:61",
              "statements": []
            },
            "id": 10802,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10799,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10798,
                  "name": "onlyInitializing",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9770,
                  "src": "716:16:61"
                },
                "nodeType": "ModifierInvocation",
                "src": "716:16:61"
              }
            ],
            "name": "__ERC20Burnable_init_unchained",
            "nameLocation": "674:30:61",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10797,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "704:2:61"
            },
            "returnParameters": {
              "id": 10800,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "733:0:61"
            },
            "scope": 10842,
            "src": "665:75:61",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10814,
              "nodeType": "Block",
              "src": "893:44:61",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 10809,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11682,
                          "src": "909:10:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 10810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "909:12:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10811,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10805,
                        "src": "923:6:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10808,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10584,
                      "src": "903:5:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "903:27:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10813,
                  "nodeType": "ExpressionStatement",
                  "src": "903:27:61"
                }
              ]
            },
            "documentation": {
              "id": 10803,
              "nodeType": "StructuredDocumentation",
              "src": "745:98:61",
              "text": " @dev Destroys `amount` tokens from the caller.\n See {ERC20-_burn}."
            },
            "functionSelector": "42966c68",
            "id": 10815,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burn",
            "nameLocation": "857:4:61",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10806,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10805,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "870:6:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 10815,
                  "src": "862:14:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10804,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "862:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "861:16:61"
            },
            "returnParameters": {
              "id": 10807,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "893:0:61"
            },
            "scope": 10842,
            "src": "848:89:61",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10835,
              "nodeType": "Block",
              "src": "1309:95:61",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10824,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10818,
                        "src": "1335:7:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 10825,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11682,
                          "src": "1344:10:61",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 10826,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1344:12:61",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10827,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10820,
                        "src": "1358:6:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10823,
                      "name": "_spendAllowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10672,
                      "src": "1319:15:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 10828,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1319:46:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10829,
                  "nodeType": "ExpressionStatement",
                  "src": "1319:46:61"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10831,
                        "name": "account",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10818,
                        "src": "1381:7:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10832,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10820,
                        "src": "1390:6:61",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10830,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10584,
                      "src": "1375:5:61",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 10833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1375:22:61",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10834,
                  "nodeType": "ExpressionStatement",
                  "src": "1375:22:61"
                }
              ]
            },
            "documentation": {
              "id": 10816,
              "nodeType": "StructuredDocumentation",
              "src": "943:295:61",
              "text": " @dev Destroys `amount` tokens from `account`, deducting from the caller's\n allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `amount`."
            },
            "functionSelector": "79cc6790",
            "id": 10836,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnFrom",
            "nameLocation": "1252:8:61",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10821,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10818,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1269:7:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 10836,
                  "src": "1261:15:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10817,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1261:7:61",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10820,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1286:6:61",
                  "nodeType": "VariableDeclaration",
                  "scope": 10836,
                  "src": "1278:14:61",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10819,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1278:7:61",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1260:33:61"
            },
            "returnParameters": {
              "id": 10822,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1309:0:61"
            },
            "scope": 10842,
            "src": "1243:161:61",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 10837,
              "nodeType": "StructuredDocumentation",
              "src": "1410:254:61",
              "text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
            },
            "id": 10841,
            "mutability": "mutable",
            "name": "__gap",
            "nameLocation": "1689:5:61",
            "nodeType": "VariableDeclaration",
            "scope": 10842,
            "src": "1669:25:61",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 10838,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1669:7:61",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 10840,
              "length": {
                "hexValue": "3530",
                "id": 10839,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1677:2:61",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_50_by_1",
                  "typeString": "int_const 50"
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "1669:11:61",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "visibility": "private"
          }
        ],
        "scope": 10843,
        "src": "490:1207:61",
        "usedErrors": []
      }
    ],
    "src": "124:1574:61"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.b01f3284.mod.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2024-11-22T02:00:08.382Z"
}