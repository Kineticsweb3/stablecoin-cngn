{
  "contractName": "PausableUpgradeable",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    function __Pausable_init() internal onlyInitializing {\n        __Pausable_init_unchained();\n    }\n\n    function __Pausable_init_unchained() internal onlyInitializing {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n",
  "sourcePath": "contracts/.deps/npm/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
  "ast": {
    "absolutePath": "contracts/.deps/npm/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        11499
      ],
      "ContextUpgradeable": [
        11697
      ],
      "Initializable": [
        9825
      ],
      "PausableUpgradeable": [
        10088
      ]
    },
    "id": 10089,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9963,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "105:23:58"
      },
      {
        "absolutePath": "contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
        "file": "../utils/ContextUpgradeable.sol",
        "id": 9964,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10089,
        "sourceUnit": 11698,
        "src": "130:41:58",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/.deps/npm/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "file": "../proxy/utils/Initializable.sol",
        "id": 9965,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10089,
        "sourceUnit": 9826,
        "src": "172:42:58",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 9967,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9825,
              "src": "697:13:58"
            },
            "id": 9968,
            "nodeType": "InheritanceSpecifier",
            "src": "697:13:58"
          },
          {
            "baseName": {
              "id": 9969,
              "name": "ContextUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11697,
              "src": "712:18:58"
            },
            "id": 9970,
            "nodeType": "InheritanceSpecifier",
            "src": "712:18:58"
          }
        ],
        "canonicalName": "PausableUpgradeable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 9966,
          "nodeType": "StructuredDocumentation",
          "src": "216:439:58",
          "text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
        },
        "fullyImplemented": true,
        "id": 10088,
        "linearizedBaseContracts": [
          10088,
          11697,
          9825
        ],
        "name": "PausableUpgradeable",
        "nameLocation": "674:19:58",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 9971,
              "nodeType": "StructuredDocumentation",
              "src": "737:73:58",
              "text": " @dev Emitted when the pause is triggered by `account`."
            },
            "id": 9975,
            "name": "Paused",
            "nameLocation": "821:6:58",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9974,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9973,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "836:7:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 9975,
                  "src": "828:15:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9972,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "828:7:58",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "827:17:58"
            },
            "src": "815:30:58"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 9976,
              "nodeType": "StructuredDocumentation",
              "src": "851:70:58",
              "text": " @dev Emitted when the pause is lifted by `account`."
            },
            "id": 9980,
            "name": "Unpaused",
            "nameLocation": "932:8:58",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9979,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9978,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "949:7:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 9980,
                  "src": "941:15:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9977,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "941:7:58",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "940:17:58"
            },
            "src": "926:32:58"
          },
          {
            "constant": false,
            "id": 9982,
            "mutability": "mutable",
            "name": "_paused",
            "nameLocation": "977:7:58",
            "nodeType": "VariableDeclaration",
            "scope": 10088,
            "src": "964:20:58",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 9981,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "964:4:58",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 9991,
              "nodeType": "Block",
              "src": "1116:44:58",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 9988,
                      "name": "__Pausable_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10002,
                      "src": "1126:25:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 9989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1126:27:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9990,
                  "nodeType": "ExpressionStatement",
                  "src": "1126:27:58"
                }
              ]
            },
            "documentation": {
              "id": 9983,
              "nodeType": "StructuredDocumentation",
              "src": "991:67:58",
              "text": " @dev Initializes the contract in unpaused state."
            },
            "id": 9992,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 9986,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 9985,
                  "name": "onlyInitializing",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9770,
                  "src": "1099:16:58"
                },
                "nodeType": "ModifierInvocation",
                "src": "1099:16:58"
              }
            ],
            "name": "__Pausable_init",
            "nameLocation": "1072:15:58",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9984,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1087:2:58"
            },
            "returnParameters": {
              "id": 9987,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1116:0:58"
            },
            "scope": 10088,
            "src": "1063:97:58",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10001,
              "nodeType": "Block",
              "src": "1229:32:58",
              "statements": [
                {
                  "expression": {
                    "id": 9999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9997,
                      "name": "_paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9982,
                      "src": "1239:7:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 9998,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1249:5:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1239:15:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10000,
                  "nodeType": "ExpressionStatement",
                  "src": "1239:15:58"
                }
              ]
            },
            "id": 10002,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 9995,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 9994,
                  "name": "onlyInitializing",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9770,
                  "src": "1212:16:58"
                },
                "nodeType": "ModifierInvocation",
                "src": "1212:16:58"
              }
            ],
            "name": "__Pausable_init_unchained",
            "nameLocation": "1175:25:58",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9993,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1200:2:58"
            },
            "returnParameters": {
              "id": 9996,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1229:0:58"
            },
            "scope": 10088,
            "src": "1166:95:58",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10009,
              "nodeType": "Block",
              "src": "1472:47:58",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 10005,
                      "name": "_requireNotPaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10039,
                      "src": "1482:17:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 10006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1482:19:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10007,
                  "nodeType": "ExpressionStatement",
                  "src": "1482:19:58"
                },
                {
                  "id": 10008,
                  "nodeType": "PlaceholderStatement",
                  "src": "1511:1:58"
                }
              ]
            },
            "documentation": {
              "id": 10003,
              "nodeType": "StructuredDocumentation",
              "src": "1267:175:58",
              "text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
            },
            "id": 10010,
            "name": "whenNotPaused",
            "nameLocation": "1456:13:58",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 10004,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1469:2:58"
            },
            "src": "1447:72:58",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10017,
              "nodeType": "Block",
              "src": "1719:44:58",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 10013,
                      "name": "_requirePaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10050,
                      "src": "1729:14:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 10014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1729:16:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10015,
                  "nodeType": "ExpressionStatement",
                  "src": "1729:16:58"
                },
                {
                  "id": 10016,
                  "nodeType": "PlaceholderStatement",
                  "src": "1755:1:58"
                }
              ]
            },
            "documentation": {
              "id": 10011,
              "nodeType": "StructuredDocumentation",
              "src": "1525:167:58",
              "text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
            },
            "id": 10018,
            "name": "whenPaused",
            "nameLocation": "1706:10:58",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 10012,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1716:2:58"
            },
            "src": "1697:66:58",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10026,
              "nodeType": "Block",
              "src": "1911:31:58",
              "statements": [
                {
                  "expression": {
                    "id": 10024,
                    "name": "_paused",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9982,
                    "src": "1928:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 10023,
                  "id": 10025,
                  "nodeType": "Return",
                  "src": "1921:14:58"
                }
              ]
            },
            "documentation": {
              "id": 10019,
              "nodeType": "StructuredDocumentation",
              "src": "1769:84:58",
              "text": " @dev Returns true if the contract is paused, and false otherwise."
            },
            "functionSelector": "5c975abb",
            "id": 10027,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "paused",
            "nameLocation": "1867:6:58",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10020,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1873:2:58"
            },
            "returnParameters": {
              "id": 10023,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10022,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10027,
                  "src": "1905:4:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10021,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1905:4:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1904:6:58"
            },
            "scope": 10088,
            "src": "1858:84:58",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10038,
              "nodeType": "Block",
              "src": "2061:55:58",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10034,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2079:9:58",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 10032,
                            "name": "paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10027,
                            "src": "2080:6:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 10033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2080:8:58",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061757361626c653a20706175736564",
                        "id": 10035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2090:18:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
                          "typeString": "literal_string \"Pausable: paused\""
                        },
                        "value": "Pausable: paused"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
                          "typeString": "literal_string \"Pausable: paused\""
                        }
                      ],
                      "id": 10031,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2071:7:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2071:38:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10037,
                  "nodeType": "ExpressionStatement",
                  "src": "2071:38:58"
                }
              ]
            },
            "documentation": {
              "id": 10028,
              "nodeType": "StructuredDocumentation",
              "src": "1948:57:58",
              "text": " @dev Throws if the contract is paused."
            },
            "id": 10039,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_requireNotPaused",
            "nameLocation": "2019:17:58",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10029,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2036:2:58"
            },
            "returnParameters": {
              "id": 10030,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2061:0:58"
            },
            "scope": 10088,
            "src": "2010:106:58",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10049,
              "nodeType": "Block",
              "src": "2236:58:58",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 10044,
                          "name": "paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10027,
                          "src": "2254:6:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 10045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2254:8:58",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061757361626c653a206e6f7420706175736564",
                        "id": 10046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2264:22:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
                          "typeString": "literal_string \"Pausable: not paused\""
                        },
                        "value": "Pausable: not paused"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
                          "typeString": "literal_string \"Pausable: not paused\""
                        }
                      ],
                      "id": 10043,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2246:7:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2246:41:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10048,
                  "nodeType": "ExpressionStatement",
                  "src": "2246:41:58"
                }
              ]
            },
            "documentation": {
              "id": 10040,
              "nodeType": "StructuredDocumentation",
              "src": "2122:61:58",
              "text": " @dev Throws if the contract is not paused."
            },
            "id": 10050,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_requirePaused",
            "nameLocation": "2197:14:58",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10041,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2211:2:58"
            },
            "returnParameters": {
              "id": 10042,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2236:0:58"
            },
            "scope": 10088,
            "src": "2188:106:58",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10065,
              "nodeType": "Block",
              "src": "2478:66:58",
              "statements": [
                {
                  "expression": {
                    "id": 10058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10056,
                      "name": "_paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9982,
                      "src": "2488:7:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 10057,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2498:4:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2488:14:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10059,
                  "nodeType": "ExpressionStatement",
                  "src": "2488:14:58"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 10061,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11682,
                          "src": "2524:10:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 10062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2524:12:58",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10060,
                      "name": "Paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9975,
                      "src": "2517:6:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 10063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2517:20:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10064,
                  "nodeType": "EmitStatement",
                  "src": "2512:25:58"
                }
              ]
            },
            "documentation": {
              "id": 10051,
              "nodeType": "StructuredDocumentation",
              "src": "2300:124:58",
              "text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
            },
            "id": 10066,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10054,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10053,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10010,
                  "src": "2464:13:58"
                },
                "nodeType": "ModifierInvocation",
                "src": "2464:13:58"
              }
            ],
            "name": "_pause",
            "nameLocation": "2438:6:58",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10052,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2444:2:58"
            },
            "returnParameters": {
              "id": 10055,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2478:0:58"
            },
            "scope": 10088,
            "src": "2429:115:58",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10081,
              "nodeType": "Block",
              "src": "2724:69:58",
              "statements": [
                {
                  "expression": {
                    "id": 10074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10072,
                      "name": "_paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9982,
                      "src": "2734:7:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 10073,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2744:5:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2734:15:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10075,
                  "nodeType": "ExpressionStatement",
                  "src": "2734:15:58"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 10077,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11682,
                          "src": "2773:10:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 10078,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2773:12:58",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10076,
                      "name": "Unpaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9980,
                      "src": "2764:8:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 10079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2764:22:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10080,
                  "nodeType": "EmitStatement",
                  "src": "2759:27:58"
                }
              ]
            },
            "documentation": {
              "id": 10067,
              "nodeType": "StructuredDocumentation",
              "src": "2550:121:58",
              "text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
            },
            "id": 10082,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10070,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10069,
                  "name": "whenPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10018,
                  "src": "2713:10:58"
                },
                "nodeType": "ModifierInvocation",
                "src": "2713:10:58"
              }
            ],
            "name": "_unpause",
            "nameLocation": "2685:8:58",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10068,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2693:2:58"
            },
            "returnParameters": {
              "id": 10071,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2724:0:58"
            },
            "scope": 10088,
            "src": "2676:117:58",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 10083,
              "nodeType": "StructuredDocumentation",
              "src": "2799:254:58",
              "text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
            },
            "id": 10087,
            "mutability": "mutable",
            "name": "__gap",
            "nameLocation": "3078:5:58",
            "nodeType": "VariableDeclaration",
            "scope": 10088,
            "src": "3058:25:58",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$49_storage",
              "typeString": "uint256[49]"
            },
            "typeName": {
              "baseType": {
                "id": 10084,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3058:7:58",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 10086,
              "length": {
                "hexValue": "3439",
                "id": 10085,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "3066:2:58",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_49_by_1",
                  "typeString": "int_const 49"
                },
                "value": "49"
              },
              "nodeType": "ArrayTypeName",
              "src": "3058:11:58",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
                "typeString": "uint256[49]"
              }
            },
            "visibility": "private"
          }
        ],
        "scope": 10089,
        "src": "656:2430:58",
        "usedErrors": []
      }
    ],
    "src": "105:2982:58"
  },
  "legacyAST": {
    "absolutePath": "contracts/.deps/npm/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        11499
      ],
      "ContextUpgradeable": [
        11697
      ],
      "Initializable": [
        9825
      ],
      "PausableUpgradeable": [
        10088
      ]
    },
    "id": 10089,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 9963,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "105:23:58"
      },
      {
        "absolutePath": "contracts/.deps/npm/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
        "file": "../utils/ContextUpgradeable.sol",
        "id": 9964,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10089,
        "sourceUnit": 11698,
        "src": "130:41:58",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/.deps/npm/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "file": "../proxy/utils/Initializable.sol",
        "id": 9965,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10089,
        "sourceUnit": 9826,
        "src": "172:42:58",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 9967,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 9825,
              "src": "697:13:58"
            },
            "id": 9968,
            "nodeType": "InheritanceSpecifier",
            "src": "697:13:58"
          },
          {
            "baseName": {
              "id": 9969,
              "name": "ContextUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11697,
              "src": "712:18:58"
            },
            "id": 9970,
            "nodeType": "InheritanceSpecifier",
            "src": "712:18:58"
          }
        ],
        "canonicalName": "PausableUpgradeable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 9966,
          "nodeType": "StructuredDocumentation",
          "src": "216:439:58",
          "text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
        },
        "fullyImplemented": true,
        "id": 10088,
        "linearizedBaseContracts": [
          10088,
          11697,
          9825
        ],
        "name": "PausableUpgradeable",
        "nameLocation": "674:19:58",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 9971,
              "nodeType": "StructuredDocumentation",
              "src": "737:73:58",
              "text": " @dev Emitted when the pause is triggered by `account`."
            },
            "id": 9975,
            "name": "Paused",
            "nameLocation": "821:6:58",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9974,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9973,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "836:7:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 9975,
                  "src": "828:15:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9972,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "828:7:58",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "827:17:58"
            },
            "src": "815:30:58"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 9976,
              "nodeType": "StructuredDocumentation",
              "src": "851:70:58",
              "text": " @dev Emitted when the pause is lifted by `account`."
            },
            "id": 9980,
            "name": "Unpaused",
            "nameLocation": "932:8:58",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 9979,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 9978,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "949:7:58",
                  "nodeType": "VariableDeclaration",
                  "scope": 9980,
                  "src": "941:15:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 9977,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "941:7:58",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "940:17:58"
            },
            "src": "926:32:58"
          },
          {
            "constant": false,
            "id": 9982,
            "mutability": "mutable",
            "name": "_paused",
            "nameLocation": "977:7:58",
            "nodeType": "VariableDeclaration",
            "scope": 10088,
            "src": "964:20:58",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 9981,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "964:4:58",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 9991,
              "nodeType": "Block",
              "src": "1116:44:58",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 9988,
                      "name": "__Pausable_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10002,
                      "src": "1126:25:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 9989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1126:27:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 9990,
                  "nodeType": "ExpressionStatement",
                  "src": "1126:27:58"
                }
              ]
            },
            "documentation": {
              "id": 9983,
              "nodeType": "StructuredDocumentation",
              "src": "991:67:58",
              "text": " @dev Initializes the contract in unpaused state."
            },
            "id": 9992,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 9986,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 9985,
                  "name": "onlyInitializing",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9770,
                  "src": "1099:16:58"
                },
                "nodeType": "ModifierInvocation",
                "src": "1099:16:58"
              }
            ],
            "name": "__Pausable_init",
            "nameLocation": "1072:15:58",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9984,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1087:2:58"
            },
            "returnParameters": {
              "id": 9987,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1116:0:58"
            },
            "scope": 10088,
            "src": "1063:97:58",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10001,
              "nodeType": "Block",
              "src": "1229:32:58",
              "statements": [
                {
                  "expression": {
                    "id": 9999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 9997,
                      "name": "_paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9982,
                      "src": "1239:7:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 9998,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1249:5:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1239:15:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10000,
                  "nodeType": "ExpressionStatement",
                  "src": "1239:15:58"
                }
              ]
            },
            "id": 10002,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 9995,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 9994,
                  "name": "onlyInitializing",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 9770,
                  "src": "1212:16:58"
                },
                "nodeType": "ModifierInvocation",
                "src": "1212:16:58"
              }
            ],
            "name": "__Pausable_init_unchained",
            "nameLocation": "1175:25:58",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 9993,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1200:2:58"
            },
            "returnParameters": {
              "id": 9996,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1229:0:58"
            },
            "scope": 10088,
            "src": "1166:95:58",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10009,
              "nodeType": "Block",
              "src": "1472:47:58",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 10005,
                      "name": "_requireNotPaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10039,
                      "src": "1482:17:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 10006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1482:19:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10007,
                  "nodeType": "ExpressionStatement",
                  "src": "1482:19:58"
                },
                {
                  "id": 10008,
                  "nodeType": "PlaceholderStatement",
                  "src": "1511:1:58"
                }
              ]
            },
            "documentation": {
              "id": 10003,
              "nodeType": "StructuredDocumentation",
              "src": "1267:175:58",
              "text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
            },
            "id": 10010,
            "name": "whenNotPaused",
            "nameLocation": "1456:13:58",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 10004,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1469:2:58"
            },
            "src": "1447:72:58",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10017,
              "nodeType": "Block",
              "src": "1719:44:58",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 10013,
                      "name": "_requirePaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10050,
                      "src": "1729:14:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 10014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1729:16:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10015,
                  "nodeType": "ExpressionStatement",
                  "src": "1729:16:58"
                },
                {
                  "id": 10016,
                  "nodeType": "PlaceholderStatement",
                  "src": "1755:1:58"
                }
              ]
            },
            "documentation": {
              "id": 10011,
              "nodeType": "StructuredDocumentation",
              "src": "1525:167:58",
              "text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
            },
            "id": 10018,
            "name": "whenPaused",
            "nameLocation": "1706:10:58",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 10012,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1716:2:58"
            },
            "src": "1697:66:58",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10026,
              "nodeType": "Block",
              "src": "1911:31:58",
              "statements": [
                {
                  "expression": {
                    "id": 10024,
                    "name": "_paused",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9982,
                    "src": "1928:7:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 10023,
                  "id": 10025,
                  "nodeType": "Return",
                  "src": "1921:14:58"
                }
              ]
            },
            "documentation": {
              "id": 10019,
              "nodeType": "StructuredDocumentation",
              "src": "1769:84:58",
              "text": " @dev Returns true if the contract is paused, and false otherwise."
            },
            "functionSelector": "5c975abb",
            "id": 10027,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "paused",
            "nameLocation": "1867:6:58",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10020,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1873:2:58"
            },
            "returnParameters": {
              "id": 10023,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10022,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10027,
                  "src": "1905:4:58",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10021,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1905:4:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1904:6:58"
            },
            "scope": 10088,
            "src": "1858:84:58",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10038,
              "nodeType": "Block",
              "src": "2061:55:58",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10034,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2079:9:58",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 10032,
                            "name": "paused",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10027,
                            "src": "2080:6:58",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                              "typeString": "function () view returns (bool)"
                            }
                          },
                          "id": 10033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2080:8:58",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061757361626c653a20706175736564",
                        "id": 10035,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2090:18:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
                          "typeString": "literal_string \"Pausable: paused\""
                        },
                        "value": "Pausable: paused"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
                          "typeString": "literal_string \"Pausable: paused\""
                        }
                      ],
                      "id": 10031,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2071:7:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2071:38:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10037,
                  "nodeType": "ExpressionStatement",
                  "src": "2071:38:58"
                }
              ]
            },
            "documentation": {
              "id": 10028,
              "nodeType": "StructuredDocumentation",
              "src": "1948:57:58",
              "text": " @dev Throws if the contract is paused."
            },
            "id": 10039,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_requireNotPaused",
            "nameLocation": "2019:17:58",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10029,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2036:2:58"
            },
            "returnParameters": {
              "id": 10030,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2061:0:58"
            },
            "scope": 10088,
            "src": "2010:106:58",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10049,
              "nodeType": "Block",
              "src": "2236:58:58",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 10044,
                          "name": "paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10027,
                          "src": "2254:6:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 10045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2254:8:58",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061757361626c653a206e6f7420706175736564",
                        "id": 10046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2264:22:58",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
                          "typeString": "literal_string \"Pausable: not paused\""
                        },
                        "value": "Pausable: not paused"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
                          "typeString": "literal_string \"Pausable: not paused\""
                        }
                      ],
                      "id": 10043,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2246:7:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2246:41:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10048,
                  "nodeType": "ExpressionStatement",
                  "src": "2246:41:58"
                }
              ]
            },
            "documentation": {
              "id": 10040,
              "nodeType": "StructuredDocumentation",
              "src": "2122:61:58",
              "text": " @dev Throws if the contract is not paused."
            },
            "id": 10050,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_requirePaused",
            "nameLocation": "2197:14:58",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10041,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2211:2:58"
            },
            "returnParameters": {
              "id": 10042,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2236:0:58"
            },
            "scope": 10088,
            "src": "2188:106:58",
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10065,
              "nodeType": "Block",
              "src": "2478:66:58",
              "statements": [
                {
                  "expression": {
                    "id": 10058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10056,
                      "name": "_paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9982,
                      "src": "2488:7:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 10057,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2498:4:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2488:14:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10059,
                  "nodeType": "ExpressionStatement",
                  "src": "2488:14:58"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 10061,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11682,
                          "src": "2524:10:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 10062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2524:12:58",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10060,
                      "name": "Paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9975,
                      "src": "2517:6:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 10063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2517:20:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10064,
                  "nodeType": "EmitStatement",
                  "src": "2512:25:58"
                }
              ]
            },
            "documentation": {
              "id": 10051,
              "nodeType": "StructuredDocumentation",
              "src": "2300:124:58",
              "text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
            },
            "id": 10066,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10054,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10053,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10010,
                  "src": "2464:13:58"
                },
                "nodeType": "ModifierInvocation",
                "src": "2464:13:58"
              }
            ],
            "name": "_pause",
            "nameLocation": "2438:6:58",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10052,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2444:2:58"
            },
            "returnParameters": {
              "id": 10055,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2478:0:58"
            },
            "scope": 10088,
            "src": "2429:115:58",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10081,
              "nodeType": "Block",
              "src": "2724:69:58",
              "statements": [
                {
                  "expression": {
                    "id": 10074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10072,
                      "name": "_paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9982,
                      "src": "2734:7:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 10073,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2744:5:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2734:15:58",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10075,
                  "nodeType": "ExpressionStatement",
                  "src": "2734:15:58"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 10077,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11682,
                          "src": "2773:10:58",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 10078,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2773:12:58",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10076,
                      "name": "Unpaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9980,
                      "src": "2764:8:58",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 10079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2764:22:58",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10080,
                  "nodeType": "EmitStatement",
                  "src": "2759:27:58"
                }
              ]
            },
            "documentation": {
              "id": 10067,
              "nodeType": "StructuredDocumentation",
              "src": "2550:121:58",
              "text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
            },
            "id": 10082,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10070,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10069,
                  "name": "whenPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10018,
                  "src": "2713:10:58"
                },
                "nodeType": "ModifierInvocation",
                "src": "2713:10:58"
              }
            ],
            "name": "_unpause",
            "nameLocation": "2685:8:58",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10068,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2693:2:58"
            },
            "returnParameters": {
              "id": 10071,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2724:0:58"
            },
            "scope": 10088,
            "src": "2676:117:58",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 10083,
              "nodeType": "StructuredDocumentation",
              "src": "2799:254:58",
              "text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
            },
            "id": 10087,
            "mutability": "mutable",
            "name": "__gap",
            "nameLocation": "3078:5:58",
            "nodeType": "VariableDeclaration",
            "scope": 10088,
            "src": "3058:25:58",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$49_storage",
              "typeString": "uint256[49]"
            },
            "typeName": {
              "baseType": {
                "id": 10084,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3058:7:58",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 10086,
              "length": {
                "hexValue": "3439",
                "id": 10085,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "3066:2:58",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_49_by_1",
                  "typeString": "int_const 49"
                },
                "value": "49"
              },
              "nodeType": "ArrayTypeName",
              "src": "3058:11:58",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
                "typeString": "uint256[49]"
              }
            },
            "visibility": "private"
          }
        ],
        "scope": 10089,
        "src": "656:2430:58",
        "usedErrors": []
      }
    ],
    "src": "105:2982:58"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.b01f3284.mod.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2024-11-22T02:00:08.378Z"
}